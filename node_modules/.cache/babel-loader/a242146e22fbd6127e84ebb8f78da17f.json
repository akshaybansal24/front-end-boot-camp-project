{"ast":null,"code":"import { ADD_ACTION, SUBTRACT_ACTION, MULTIPLY_ACTION, DIVIDE_ACTION, CLEAR_ACTION, DELETE_HISTORY } from '../actions/calcToolActions';\nimport { combineReducers } from \"redux\";\n\nconst resultReducer = (result = 0, action) => {\n  switch (action.type) {\n    case ADD_ACTION:\n      return result + action.payload.value;\n\n    case SUBTRACT_ACTION:\n      return result - action.payload.value;\n\n    case MULTIPLY_ACTION:\n      return result * action.payload.value;\n\n    case DIVIDE_ACTION:\n      if (action.payload.value === 0) {\n        return result;\n      }\n\n      return result / action.payload.value;\n\n    case CLEAR_ACTION:\n      return 0;\n\n    default:\n      return result;\n  }\n};\n\nconst historyReducer = (history = [{}], action) => {\n  console.log(action);\n\n  if ([ADD_ACTION, SUBTRACT_ACTION, MULTIPLY_ACTION, DIVIDE_ACTION].includes(action.type)) {\n    if (action.type === DIVIDE_ACTION && action.payload.value === 0) {\n      return history;\n    }\n\n    return [...history, {\n      id: Math.max(...history.map(item => item.id), 0) + 1,\n      value: action.payload.value,\n      type: action.type\n    }];\n  }\n\n  if (action.type === CLEAR_ACTION) {\n    return [];\n  }\n\n  if (action.type === DELETE_HISTORY) {\n    return history.filter(h => h.id !== action.payload.value);\n  }\n\n  return history;\n};\n\nconst errorMessageReducer = (errorMessage = \"\", action) => {\n  if (action.type === DIVIDE_ACTION && action.payload.value === 0) {\n    return \"Divide by 0 is not allowed.\";\n  }\n\n  return \"\";\n};\n\nexport const calcToolReducer = combineReducers({\n  result: resultReducer,\n  history: historyReducer,\n  errorMessage: errorMessageReducer\n});","map":{"version":3,"sources":["/app/Front-end-bootcamp/demo-app/src/reducers/calToolReducers.js"],"names":["ADD_ACTION","SUBTRACT_ACTION","MULTIPLY_ACTION","DIVIDE_ACTION","CLEAR_ACTION","DELETE_HISTORY","combineReducers","resultReducer","result","action","type","payload","value","historyReducer","history","console","log","includes","id","Math","max","map","item","filter","h","errorMessageReducer","errorMessage","calcToolReducer"],"mappings":"AAAA,SAASA,UAAT,EACQC,eADR,EAEQC,eAFR,EAGQC,aAHR,EAIQC,YAJR,EAKQC,cALR,QAK8B,4BAL9B;AAOA,SAASC,eAAT,QAAgC,OAAhC;;AAGA,MAAMC,aAAa,GAAG,CAACC,MAAM,GAAC,CAAR,EAAWC,MAAX,KAAsB;AAExC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,UAAL;AACI,aAAOQ,MAAM,GAAGC,MAAM,CAACE,OAAP,CAAeC,KAA/B;;AACJ,SAAKX,eAAL;AACI,aAAOO,MAAM,GAAGC,MAAM,CAACE,OAAP,CAAeC,KAA/B;;AACJ,SAAKV,eAAL;AACI,aAAOM,MAAM,GAAGC,MAAM,CAACE,OAAP,CAAeC,KAA/B;;AACJ,SAAKT,aAAL;AACI,UAAGM,MAAM,CAACE,OAAP,CAAeC,KAAf,KAAyB,CAA5B,EAA8B;AAC1B,eAAOJ,MAAP;AACH;;AACD,aAAOA,MAAM,GAAGC,MAAM,CAACE,OAAP,CAAeC,KAA/B;;AACJ,SAAKR,YAAL;AACI,aAAO,CAAP;;AACJ;AACI,aAAOI,MAAP;AAfR;AAiBH,CAnBD;;AAqBA,MAAMK,cAAc,GAAG,CAACC,OAAO,GAAE,CAAC,EAAD,CAAV,EAAiBL,MAAjB,KAA4B;AAC/CM,EAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;;AACA,MAAG,CAACT,UAAD,EAAYC,eAAZ,EAA4BC,eAA5B,EAA4CC,aAA5C,EAA2Dc,QAA3D,CAAoER,MAAM,CAACC,IAA3E,CAAH,EAAoF;AAChF,QAAGD,MAAM,CAACC,IAAP,KAAgBP,aAAhB,IAAiCM,MAAM,CAACE,OAAP,CAAeC,KAAf,KAAyB,CAA7D,EAA+D;AAC3D,aAAOE,OAAP;AACH;;AACD,WAAO,CAAC,GAAGA,OAAJ,EAAY;AACfI,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,CAAS,GAAGN,OAAO,CAACO,GAAR,CAAYC,IAAI,IAAIA,IAAI,CAACJ,EAAzB,CAAZ,EAA2C,CAA3C,IAAgD,CADrC;AAEfN,MAAAA,KAAK,EAAEH,MAAM,CAACE,OAAP,CAAeC,KAFP;AAGfF,MAAAA,IAAI,EAAED,MAAM,CAACC;AAHE,KAAZ,CAAP;AAKH;;AAED,MAAGD,MAAM,CAACC,IAAP,KAAgBN,YAAnB,EAAgC;AAC5B,WAAO,EAAP;AACH;;AAED,MAAGK,MAAM,CAACC,IAAP,KAAgBL,cAAnB,EAAkC;AAC9B,WAAOS,OAAO,CAACS,MAAR,CAAeC,CAAC,IAAIA,CAAC,CAACN,EAAF,KAAST,MAAM,CAACE,OAAP,CAAeC,KAA5C,CAAP;AACH;;AAED,SAAOE,OAAP;AACH,CAtBD;;AAwBA,MAAMW,mBAAmB,GAAE,CAACC,YAAY,GAAC,EAAd,EAAkBjB,MAAlB,KAA6B;AACpD,MAAGA,MAAM,CAACC,IAAP,KAAgBP,aAAhB,IAAiCM,MAAM,CAACE,OAAP,CAAeC,KAAf,KAAyB,CAA7D,EAA+D;AAC3D,WAAO,6BAAP;AACH;;AACD,SAAO,EAAP;AACH,CALD;;AAMA,OAAO,MAAMe,eAAe,GAAGrB,eAAe,CAAC;AAC3CE,EAAAA,MAAM,EAAED,aADmC;AAE3CO,EAAAA,OAAO,EAAED,cAFkC;AAG3Ca,EAAAA,YAAY,EAAED;AAH6B,CAAD,CAAvC","sourcesContent":["import { ADD_ACTION, \n        SUBTRACT_ACTION,\n        MULTIPLY_ACTION, \n        DIVIDE_ACTION, \n        CLEAR_ACTION,\n        DELETE_HISTORY } from '../actions/calcToolActions';\n\nimport { combineReducers } from \"redux\";\n\n\nconst resultReducer = (result=0, action) => {\n\n    switch(action.type){\n        case ADD_ACTION:\n            return result + action.payload.value;\n        case SUBTRACT_ACTION:\n            return result - action.payload.value;\n        case MULTIPLY_ACTION:\n            return result * action.payload.value;\n        case DIVIDE_ACTION:\n            if(action.payload.value === 0){\n                return result;\n            }\n            return result / action.payload.value;   \n        case CLEAR_ACTION:\n            return 0;\n        default:\n            return result;\n    }\n}\n\nconst historyReducer = (history =[{}] , action) => {\n    console.log(action);\n    if([ADD_ACTION,SUBTRACT_ACTION,MULTIPLY_ACTION,DIVIDE_ACTION].includes(action.type)){\n        if(action.type === DIVIDE_ACTION && action.payload.value === 0){\n            return history;\n        }\n        return [...history,{\n            id: Math.max(...history.map(item => item.id) , 0) + 1,\n            value: action.payload.value,\n            type: action.type\n        }];\n    }\n\n    if(action.type === CLEAR_ACTION){\n        return [];\n    }\n\n    if(action.type === DELETE_HISTORY){\n        return history.filter(h => h.id !== action.payload.value);\n    }\n\n    return history;\n}\n\nconst errorMessageReducer =(errorMessage=\"\", action) => {\n    if(action.type === DIVIDE_ACTION && action.payload.value === 0){\n        return \"Divide by 0 is not allowed.\";\n    }\n    return \"\";\n}\nexport const calcToolReducer = combineReducers({\n    result: resultReducer,\n    history: historyReducer,\n    errorMessage: errorMessageReducer\n});"]},"metadata":{},"sourceType":"module"}