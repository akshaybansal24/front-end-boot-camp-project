{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import { useSortedList, SORT_ASC, SORT_DESC } from '../hooks/useSortedList.js';\n// export const useColorToolStore = initialColors => {\n//     const [ \n//         colors, \n//         addColor, removeColor, ,\n//         sortCol, setSortCol,\n//         sortDirection, setSortDirection\n//     ] = useSortedList([...initialColors], 'id', SORT_ASC);\n//     const updateSortColor = () => {\n//         if(sortCol === 'id'){\n//             setSortCol('name');\n//             setSortDirection(SORT_ASC);\n//         }\n//         else if(sortCol === 'name' && sortDirection === SORT_ASC){\n//             setSortDirection(SORT_DESC);\n//         }\n//         else{\n//             setSortCol('id');\n//             setSortDirection(SORT_ASC);\n//         }\n//     };\n//     return {\n//         colors, addColor, removeColor, sortCol, sortDirection, updateSortColor\n//     };\n// }\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { createAddColorAction, createDeleteColorAction, createSortColorAction } from '../actions/colorToolActions';\nimport { sortedColorsSelector } from '../selectors/colorToolSelectors';\nexport const useColorToolStore = () => {\n  _s();\n\n  const colors = useSelector(sortedColorsSelector);\n  const sortDir = useSelector(state => state.sortDir);\n  const dispatch = useDispatch();\n  const boundActions = bindActionCreators({\n    addColor: createAddColorAction,\n    deleteColor: createDeleteColorAction,\n    sortColor: createSortColorAction\n  }, dispatch); //const sortedColors = sortColors(colors, sortDir);\n\n  console.log(\"Colors to render\");\n  console.log(colors);\n  return {\n    colors,\n    sortDir,\n    ...boundActions\n  };\n};\n\n_s(useColorToolStore, \"ZpxeIFpwjjn4mJThdOlr8cy6B9U=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});","map":{"version":3,"sources":["/app/Front-end-bootcamp/demo-app/src/hooks/useColorToolStore.js"],"names":["useDispatch","useSelector","bindActionCreators","createAddColorAction","createDeleteColorAction","createSortColorAction","sortedColorsSelector","useColorToolStore","colors","sortDir","state","dispatch","boundActions","addColor","deleteColor","sortColor","console","log"],"mappings":";;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SACIC,oBADJ,EAEIC,uBAFJ,EAGIC,qBAHJ,QAIO,6BAJP;AAKA,SAASC,oBAAT,QAAqC,iCAArC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AACnC,QAAMC,MAAM,GAAGP,WAAW,CAACK,oBAAD,CAA1B;AACA,QAAMG,OAAO,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;AAEA,QAAME,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAMY,YAAY,GAAGV,kBAAkB,CAAC;AACpCW,IAAAA,QAAQ,EAAEV,oBAD0B;AAEpCW,IAAAA,WAAW,EAAEV,uBAFuB;AAGpCW,IAAAA,SAAS,EAAEV;AAHyB,GAAD,EAIpCM,QAJoC,CAAvC,CANmC,CAYnC;;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AAEA,SAAO;AACHA,IAAAA,MADG;AAEHC,IAAAA,OAFG;AAGH,OAAGG;AAHA,GAAP;AAMH,CAtBM;;GAAML,iB;UACMN,W,EACCA,W,EAECD,W","sourcesContent":["// import { useSortedList, SORT_ASC, SORT_DESC } from '../hooks/useSortedList.js';\n\n// export const useColorToolStore = initialColors => {\n\n//     const [ \n//         colors, \n//         addColor, removeColor, ,\n//         sortCol, setSortCol,\n//         sortDirection, setSortDirection\n//     ] = useSortedList([...initialColors], 'id', SORT_ASC);\n\n//     const updateSortColor = () => {\n//         if(sortCol === 'id'){\n//             setSortCol('name');\n//             setSortDirection(SORT_ASC);\n//         }\n//         else if(sortCol === 'name' && sortDirection === SORT_ASC){\n//             setSortDirection(SORT_DESC);\n//         }\n//         else{\n//             setSortCol('id');\n//             setSortDirection(SORT_ASC);\n//         }\n//     };\n\n//     return {\n//         colors, addColor, removeColor, sortCol, sortDirection, updateSortColor\n//     };\n// }\n\nimport  {useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n    createAddColorAction,\n    createDeleteColorAction,\n    createSortColorAction\n} from '../actions/colorToolActions';\nimport { sortedColorsSelector } from '../selectors/colorToolSelectors';\n\nexport const useColorToolStore = () => {\n    const colors = useSelector(sortedColorsSelector);\n    const sortDir = useSelector(state => state.sortDir);\n\n    const dispatch = useDispatch();\n\n    const boundActions = bindActionCreators({\n        addColor: createAddColorAction,\n        deleteColor: createDeleteColorAction,\n        sortColor: createSortColorAction\n    }, dispatch);\n\n    //const sortedColors = sortColors(colors, sortDir);\n    console.log(\"Colors to render\")\n    console.log(colors);\n\n    return {\n        colors,\n        sortDir,\n        ...boundActions\n    };\n\n};"]},"metadata":{},"sourceType":"module"}