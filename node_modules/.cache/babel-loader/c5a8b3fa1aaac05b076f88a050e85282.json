{"ast":null,"code":"// export const all = () => {\n//     return fetch('http://localhost:3060/colors')\n//             .then(res => res.json());\n// }\nexport const all = async () => {\n  try {\n    const res = await fetch('http://localhost:3060/cars');\n    const cars = await res.json();\n    return cars;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const append = async color => {\n  const res = await fetch('http://localhost:3060/colors', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'Application/JSON'\n    },\n    body: JSON.stringify(color)\n  });\n  const newColor = await res.json();\n  return newColor;\n};\nexport const one = async colorID => {\n  const res = await fetch(`http://localhost:3060/colors/${encodeURIComponent(colorID)}`);\n  const color = await res.json();\n  return color;\n};\nexport const replace = async color => {\n  return fetch(`http://localhost:3060/color/${encodeURIComponent(color.id)}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'Application/JSON'\n    },\n    body: JSON.stringify(color)\n  });\n};\nexport const deleteColour = async colorID => {\n  return fetch(`http://localhost:3060/colors/${encodeURIComponent(colorID)}`, {\n    method: 'DELETE'\n  });\n};","map":{"version":3,"sources":["/app/Front-end-bootcamp/demo-app/src/apis/cars.js"],"names":["all","res","fetch","cars","json","error","console","log","append","color","method","headers","body","JSON","stringify","newColor","one","colorID","encodeURIComponent","replace","id","deleteColour"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,GAAG,GAAG,YAAW;AAC1B,MAAG;AACC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACH,GAJD,CAKA,OAAME,KAAN,EAAY;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CATM;AAWP,OAAO,MAAMG,MAAM,GAAG,MAAMC,KAAN,IAAgB;AAClC,QAAMR,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AAClDQ,IAAAA,MAAM,EAAE,MAD0C;AAElDC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFyC;AAGlDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;AAH4C,GAAjC,CAAvB;AAMA,QAAMM,QAAQ,GAAG,MAAMd,GAAG,CAACG,IAAJ,EAAvB;AACA,SAAOW,QAAP;AAEH,CAVM;AAYP,OAAO,MAAMC,GAAG,GAAG,MAAMC,OAAN,IAAkB;AACjC,QAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAE,gCAA+BgB,kBAAkB,CAACD,OAAD,CAAU,EAA7D,CAAvB;AACA,QAAMR,KAAK,GAAG,MAAMR,GAAG,CAACG,IAAJ,EAApB;AACA,SAAOK,KAAP;AACH,CAJM;AAMP,OAAO,MAAMU,OAAO,GAAG,MAAMV,KAAN,IAAgB;AACnC,SAAOP,KAAK,CAAE,+BAA8BgB,kBAAkB,CAACT,KAAK,CAACW,EAAP,CAAW,EAA7D,EAAgE;AACtEV,IAAAA,MAAM,EAAE,KAD8D;AAEtEC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAF6D;AAGtEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;AAHgE,GAAhE,CAAZ;AAKH,CANM;AAQP,OAAO,MAAMY,YAAY,GAAG,MAAMJ,OAAN,IAAkB;AAC1C,SAAOf,KAAK,CAAE,gCAA+BgB,kBAAkB,CAACD,OAAD,CAAU,EAA7D,EAAgE;AACtEP,IAAAA,MAAM,EAAE;AAD8D,GAAhE,CAAZ;AAGH,CAJM","sourcesContent":["// export const all = () => {\n//     return fetch('http://localhost:3060/colors')\n//             .then(res => res.json());\n// }\n\nexport const all = async() => {\n    try{\n        const res = await fetch('http://localhost:3060/cars')\n        const cars = await res.json();\n        return cars;\n    }\n    catch(error){\n        console.log(error);\n    }\n};\n\nexport const append = async(color) => {\n    const res = await fetch('http://localhost:3060/colors', {\n          method: 'POST',\n          headers: { 'Content-Type': 'Application/JSON'},\n          body: JSON.stringify(color),\n        });\n    \n    const newColor = await res.json();\n    return newColor;\n    \n};\n\nexport const one = async(colorID) => {\n    const res = await fetch(`http://localhost:3060/colors/${encodeURIComponent(colorID)}`);\n    const color = await res.json();\n    return color;\n};\n\nexport const replace = async(color) => {\n    return fetch(`http://localhost:3060/color/${encodeURIComponent(color.id)}`, {\n          method: 'PUT',\n          headers: { 'Content-Type': 'Application/JSON'},\n          body: JSON.stringify(color),\n        });\n};\n\nexport const deleteColour = async(colorID) => {\n    return fetch(`http://localhost:3060/colors/${encodeURIComponent(colorID)}`, {\n          method: 'DELETE',\n        });\n};"]},"metadata":{},"sourceType":"module"}