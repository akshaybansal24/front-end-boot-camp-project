{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { DELETE_COLOR, SORT_COLOR, REFRESH_COLORS_DONE_ACTION, REFRESH_COLORS_REQUEST_ACTION } from '../actions/colorToolActions';\nconst SORT_ASCENDING = \"Ascending\";\nconst SORT_DESCENDING = \"Descending\";\n\nconst colorReducer = (colors = [], action) => {\n  switch (action.type) {\n    case DELETE_COLOR:\n      return colors.filter(color => color.id !== action.payload.colorID);\n\n    case REFRESH_COLORS_DONE_ACTION:\n      return action.payload.colors;\n\n    default:\n      return colors;\n  }\n};\n\nconst colorsSortReducer = (colorsSort = {\n  sortCol: 'id',\n  sortDir: SORT_ASCENDING\n}, action) => {\n  if (action.type === SORT_COLOR) {\n    if (colorsSort.sortCol === 'id') {\n      return { ...colorsSort,\n        sortCol: 'name'\n      };\n    } else {\n      if (colorsSort.sortDir === SORT_ASCENDING) {\n        return { ...colorsSort,\n          sortDir: SORT_DESCENDING\n        };\n      } else {\n        return { ...colorsSort,\n          sortCol: 'id',\n          sortDir: SORT_ASCENDING\n        };\n      }\n    }\n  }\n\n  return colorsSort;\n};\n\nconst isLoadingReducer = (isLoading = false, action) => {\n  if (action.type.includes(\"REQUEST\")) return true;\n  if (action.type.includes(\"DONE\")) return false;\n  return isLoading;\n};\n\nexport const colorToolReducer = combineReducers({\n  colors: colorReducer,\n  colorsSort: colorsSortReducer,\n  isLoading: isLoadingReducer\n});","map":{"version":3,"sources":["/app/Front-end-bootcamp/demo-app/src/reducers/colorToolReducer.js"],"names":["combineReducers","DELETE_COLOR","SORT_COLOR","REFRESH_COLORS_DONE_ACTION","REFRESH_COLORS_REQUEST_ACTION","SORT_ASCENDING","SORT_DESCENDING","colorReducer","colors","action","type","filter","color","id","payload","colorID","colorsSortReducer","colorsSort","sortCol","sortDir","isLoadingReducer","isLoading","includes","colorToolReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SACCC,YADD,EAECC,UAFD,EAGCC,0BAHD,EAICC,6BAJD,QAKO,6BALP;AAOA,MAAMC,cAAc,GAAG,WAAvB;AACA,MAAMC,eAAe,GAAG,YAAxB;;AAEA,MAAMC,YAAY,GAAG,CAACC,MAAM,GAAG,EAAV,EAAcC,MAAd,KAAyB;AAC1C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,YAAL;AACI,aAAOO,MAAM,CAACG,MAAP,CAAcC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaJ,MAAM,CAACK,OAAP,CAAeC,OAAnD,CAAP;;AACJ,SAAKZ,0BAAL;AACI,aAAOM,MAAM,CAACK,OAAP,CAAeN,MAAtB;;AACJ;AACI,aAAOA,MAAP;AANR;AAQH,CATD;;AAWA,MAAMQ,iBAAiB,GAAG,CAACC,UAAU,GAAE;AAAEC,EAAAA,OAAO,EAAE,IAAX;AAAiBC,EAAAA,OAAO,EAAEd;AAA1B,CAAb,EAAyDI,MAAzD,KAAoE;AAE1F,MAAGA,MAAM,CAACC,IAAP,KAAgBR,UAAnB,EAA8B;AAC1B,QAAGe,UAAU,CAACC,OAAX,KAAuB,IAA1B,EAA+B;AAC3B,aAAO,EAAE,GAAGD,UAAL;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAP;AACH,KAFD,MAEK;AACD,UAAGD,UAAU,CAACE,OAAX,KAAuBd,cAA1B,EAAyC;AACrC,eAAO,EAAC,GAAGY,UAAJ;AAAgBE,UAAAA,OAAO,EAAEb;AAAzB,SAAP;AACH,OAFD,MAEK;AACD,eAAO,EAAC,GAAGW,UAAJ;AAAgBC,UAAAA,OAAO,EAAE,IAAzB;AAA+BC,UAAAA,OAAO,EAAEd;AAAxC,SAAP;AACH;AACJ;AACJ;;AACD,SAAOY,UAAP;AACH,CAdD;;AAgBA,MAAMG,gBAAgB,GAAG,CAACC,SAAS,GAAC,KAAX,EAAkBZ,MAAlB,KAA6B;AAClD,MAAGA,MAAM,CAACC,IAAP,CAAYY,QAAZ,CAAqB,SAArB,CAAH,EACI,OAAO,IAAP;AACJ,MAAGb,MAAM,CAACC,IAAP,CAAYY,QAAZ,CAAqB,MAArB,CAAH,EACI,OAAO,KAAP;AACJ,SAAOD,SAAP;AACH,CAND;;AAQA,OAAO,MAAME,gBAAgB,GAAGvB,eAAe,CAAC;AAC5CQ,EAAAA,MAAM,EAAED,YADoC;AAE5CU,EAAAA,UAAU,EAAED,iBAFgC;AAG5CK,EAAAA,SAAS,EAAED;AAHiC,CAAD,CAAxC","sourcesContent":["import { combineReducers } from \"redux\";\n\nimport {\n DELETE_COLOR,\n SORT_COLOR,\n REFRESH_COLORS_DONE_ACTION,\n REFRESH_COLORS_REQUEST_ACTION\n} from '../actions/colorToolActions';\n\nconst SORT_ASCENDING = \"Ascending\";\nconst SORT_DESCENDING = \"Descending\";\n\nconst colorReducer = (colors = [], action) => {\n    switch(action.type){\n        case DELETE_COLOR:\n            return colors.filter(color => color.id !== action.payload.colorID);\n        case REFRESH_COLORS_DONE_ACTION:\n            return action.payload.colors;\n        default:\n            return colors;\n    }\n};\n\nconst colorsSortReducer = (colorsSort= { sortCol: 'id', sortDir: SORT_ASCENDING }, action) => {\n\n    if(action.type === SORT_COLOR){\n        if(colorsSort.sortCol === 'id'){\n            return { ...colorsSort, sortCol: 'name'};\n        }else{\n            if(colorsSort.sortDir === SORT_ASCENDING){\n                return {...colorsSort, sortDir: SORT_DESCENDING}\n            }else{\n                return {...colorsSort, sortCol: 'id', sortDir: SORT_ASCENDING};\n            }\n        }\n    }\n    return colorsSort;\n};\n\nconst isLoadingReducer = (isLoading=false, action) => {\n    if(action.type.includes(\"REQUEST\"))\n        return true;\n    if(action.type.includes(\"DONE\"))\n        return false;\n    return isLoading;\n}\n\nexport const colorToolReducer = combineReducers({\n    colors: colorReducer,\n    colorsSort: colorsSortReducer,\n    isLoading: isLoadingReducer\n});\n"]},"metadata":{},"sourceType":"module"}