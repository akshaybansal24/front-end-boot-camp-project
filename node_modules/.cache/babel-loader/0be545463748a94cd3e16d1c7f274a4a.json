{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { ADD_CAR, DELETE_CAR, EDIT_CAR, SORT_CAR, SAVE_CAR, SORT_ASC, SORT_DESC } from '../actions/carToolActions';\nconst carList = [{\n  id: 1,\n  make: 'Lexus',\n  model: 'NX 300',\n  year: 2021,\n  color: 'Atomic Silver',\n  price: 53000,\n  isEditable: false\n}, {\n  id: 2,\n  make: 'Tesla',\n  model: 'Model 3',\n  year: 2021,\n  color: 'Red',\n  price: 72000,\n  isEditable: false\n}];\n\nconst carReducer = (cars = carList, action) => {\n  switch (action.type) {\n    case ADD_CAR:\n      return [...cars, { ...action.payload.car,\n        id: Math.max(...cars.map(c => c.id), 0) + 1\n      }];\n\n    case DELETE_CAR:\n      console.log(action);\n      return cars.filter(car => car.id !== action.payload.carID);\n\n    case SAVE_CAR:\n      const carsCopy = [...cars];\n      const updatedItemIndex = carsCopy.findIndex(car => car.id === action.payload.car.id);\n      carsCopy[updatedItemIndex] = action.payload.car;\n      return carsCopy;\n\n    default:\n      return cars;\n  }\n};\n\nconst editCarIdReducer = (editCarId = -1, action) => {\n  switch (action.type) {\n    case ADD_CAR:\n      return -1;\n\n    case DELETE_CAR:\n      return -1;\n\n    case EDIT_CAR:\n      console.log(action.payload.car);\n      editCarId = action.payload.car;\n      return editCarId;\n\n    case SAVE_CAR:\n      return -1;\n\n    default:\n      return -1;\n  }\n};\n\nconst carsSortReducer = (carsSort = {\n  sortCol: 'id',\n  sortDir: SORT_ASC\n}, action) => {\n  if (action.type === SORT_CAR) {\n    if (action.payload.col === carsSort.sortCol) {\n      if (carsSort.sortDir === SORT_ASC) return { ...carsSort,\n        sortDir: SORT_DESC\n      };else return { ...carsSort,\n        sortDir: SORT_ASC\n      };\n    } else {\n      return { ...carsSort,\n        sortCol: action.payload.col,\n        sortDir: SORT_ASC\n      };\n    }\n  }\n\n  return carsSort;\n};\n\nexport const carToolReducer = combineReducers({\n  cars: carReducer,\n  editCarId: editCarIdReducer,\n  carsSort: carsSortReducer\n});","map":{"version":3,"sources":["/app/Front-end-bootcamp/demo-app/src/reducers/carToolReducer.js"],"names":["combineReducers","ADD_CAR","DELETE_CAR","EDIT_CAR","SORT_CAR","SAVE_CAR","SORT_ASC","SORT_DESC","carList","id","make","model","year","color","price","isEditable","carReducer","cars","action","type","payload","car","Math","max","map","c","console","log","filter","carID","carsCopy","updatedItemIndex","findIndex","editCarIdReducer","editCarId","carsSortReducer","carsSort","sortCol","sortDir","col","carToolReducer"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\";\n\nimport {\n    ADD_CAR,\n    DELETE_CAR,\n    EDIT_CAR,\n    SORT_CAR,\n    SAVE_CAR,\n    SORT_ASC,\n    SORT_DESC\n} from '../actions/carToolActions';\n\nconst carList = [\n    {id: 1, make: 'Lexus', model: 'NX 300', year: 2021, color: 'Atomic Silver', price: 53000, isEditable: false},\n    {id: 2, make: 'Tesla', model: 'Model 3', year: 2021, color: 'Red', price: 72000, isEditable: false}\n  ];\n\n\nconst carReducer = (cars = carList, action) => {\n    switch(action.type){\n        case ADD_CAR:\n            return [...cars,{\n                ...action.payload.car,\n                id: Math.max(...cars.map(c => c.id) , 0) + 1,\n            }];\n        case DELETE_CAR:\n            console.log(action)\n            return cars.filter(car => car.id !== action.payload.carID);\n        case SAVE_CAR:\n            const carsCopy = [...cars];\n            const updatedItemIndex = carsCopy.findIndex(car => car.id === action.payload.car.id);\n            carsCopy[updatedItemIndex] = action.payload.car;\n            return carsCopy;\n        default:\n            return cars;\n    }\n}\n\nconst editCarIdReducer = (editCarId = -1, action) => {\n    switch(action.type){\n        case ADD_CAR:\n            return -1;\n        case DELETE_CAR:\n            return -1;\n        case EDIT_CAR:\n            console.log(action.payload.car);\n            editCarId = action.payload.car;\n            return editCarId;\n        case SAVE_CAR:\n            return -1;\n        default:\n            return -1;\n        \n    }\n}\n\nconst carsSortReducer = ( carsSort = {sortCol: 'id', sortDir: SORT_ASC}, action) => {\n    if(action.type === SORT_CAR){\n        if(action.payload.col === carsSort.sortCol){\n            if(carsSort.sortDir === SORT_ASC)\n                return {...carsSort, sortDir: SORT_DESC};\n            else\n                return {...carsSort, sortDir: SORT_ASC};\n        }\n        else{\n            return {...carsSort, sortCol: action.payload.col, sortDir: SORT_ASC};\n        }\n    }\n    return carsSort;\n};\n\nexport const carToolReducer = combineReducers({\n    cars: carReducer,\n    editCarId: editCarIdReducer,\n    carsSort: carsSortReducer\n})"]},"metadata":{},"sourceType":"module"}