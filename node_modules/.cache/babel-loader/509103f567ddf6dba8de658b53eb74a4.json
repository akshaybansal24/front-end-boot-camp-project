{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { ADD_CAR, DELETE_CAR, EDIT_CAR, SORT_CAR } from '../actions/carToolActions';\n\nconst sortItems = (unsortedItems, sortCol, sortDir) => {\n  const items = [...unsortedItems];\n  return items.sort((a, b) => {\n    if (a[sortCol] > b[sortCol]) {\n      if (sortDir === SORT_ASC) return 1;else return -1;\n    } else if (a[sortCol] < b[sortCol]) {\n      if (sortDir === SORT_ASC) return -1;else return 1;\n    } else return 0;\n  });\n};\n\nexport const carToolReducer = (state = {\n  cars: [],\n  sortCol: '',\n  sortDir: '',\n  editCarId: -1\n}, action) => {\n  switch (action.type) {\n    case ADD_CAR:\n      return { ...state,\n        cars: [...state.cars, { ...action.payload.car,\n          id: Math.max(...state.cars.map(c => c.id), 0) + 1\n        }],\n        editCarId: -1\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/app/Front-end-bootcamp/demo-app/src/reducers/carToolReducer.js"],"names":["combineReducers","ADD_CAR","DELETE_CAR","EDIT_CAR","SORT_CAR","sortItems","unsortedItems","sortCol","sortDir","items","sort","a","b","SORT_ASC","carToolReducer","state","cars","editCarId","action","type","payload","car","id","Math","max","map","c"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SACIC,OADJ,EAEIC,UAFJ,EAGIC,QAHJ,EAIIC,QAJJ,QAKO,2BALP;;AAOA,MAAMC,SAAS,GAAG,CAACC,aAAD,EAAgBC,OAAhB,EAAyBC,OAAzB,KAAqC;AAEnD,QAAMC,KAAK,GAAG,CAAC,GAAGH,aAAJ,CAAd;AAEA,SAAOG,KAAK,CAACC,IAAN,CAAW,CAACC,CAAD,EAAGC,CAAH,KAAS;AACvB,QAAGD,CAAC,CAACJ,OAAD,CAAD,GAAaK,CAAC,CAACL,OAAD,CAAjB,EAA2B;AACvB,UAAGC,OAAO,KAAKK,QAAf,EACI,OAAO,CAAP,CADJ,KAGI,OAAO,CAAC,CAAR;AACP,KALD,MAMK,IAAGF,CAAC,CAACJ,OAAD,CAAD,GAAaK,CAAC,CAACL,OAAD,CAAjB,EAA2B;AAC5B,UAAGC,OAAO,KAAKK,QAAf,EACI,OAAO,CAAC,CAAR,CADJ,KAGI,OAAO,CAAP;AACP,KALI,MAOD,OAAO,CAAP;AACP,GAfM,CAAP;AAgBH,CApBD;;AAsBA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAE;AAACC,EAAAA,IAAI,EAAE,EAAP;AAAWT,EAAAA,OAAO,EAAE,EAApB;AAAwBC,EAAAA,OAAO,EAAE,EAAjC;AAAqCS,EAAAA,SAAS,EAAE,CAAC;AAAjD,CAAR,EAA6DC,MAA7D,KAAwE;AAElG,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKlB,OAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHC,QAAAA,IAAI,EAAE,CAAC,GAAGD,KAAK,CAACC,IAAV,EAAe,EACjB,GAAGE,MAAM,CAACE,OAAP,CAAeC,GADD;AAEjBC,UAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,CAAS,GAAGT,KAAK,CAACC,IAAN,CAAWS,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACJ,EAAtB,CAAZ,EAAwC,CAAxC,IAA6C;AAFhC,SAAf,CAFH;AAMHL,QAAAA,SAAS,EAAE,CAAC;AANT,OAAP;;AAQJ;AACI,aAAOF,KAAP;AAXR;AAaH,CAfM","sourcesContent":["import { combineReducers } from \"redux\";\n\nimport {\n    ADD_CAR,\n    DELETE_CAR,\n    EDIT_CAR,\n    SORT_CAR\n} from '../actions/carToolActions';\n\nconst sortItems = (unsortedItems, sortCol, sortDir) => {\n\n    const items = [...unsortedItems];\n\n    return items.sort((a,b) => {\n        if(a[sortCol] > b[sortCol]){\n            if(sortDir === SORT_ASC)\n                return 1;\n            else\n                return -1;\n        }\n        else if(a[sortCol] < b[sortCol]){\n            if(sortDir === SORT_ASC)\n                return -1;\n            else\n                return 1;\n        }\n        else\n            return 0;\n    });\n}\n\nexport const carToolReducer = (state= {cars: [], sortCol: '', sortDir: '', editCarId: -1}, action) => {\n\n    switch(action.type){\n        case ADD_CAR:\n            return {\n                ...state,\n                cars: [...state.cars,{\n                    ...action.payload.car,\n                    id: Math.max(...state.cars.map(c => c.id) , 0) + 1,\n                }],\n                editCarId: -1\n            };\n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}