{"ast":null,"code":"var _jsxFileName = \"/app/Front-end-bootcamp/demo-app/src/components/CalcTool.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useCalcToolStore } from '../hooks/useCalcToolStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CalcTool = () => {\n  _s();\n\n  const {\n    result,\n    add,\n    subtract,\n    multiply,\n    divide,\n    clear\n  } = useCalcToolStore();\n  const [numInput, setNumInput] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [\"Result: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Num:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: numInput,\n          onChange: ({\n            target: {\n              value\n            }\n          }) => setNumInput(parseInt(value, 10))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => add(numInput),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => subtract(numInput),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => multiply(numInput),\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => divide(numInput),\n          children: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => clear(),\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CalcTool, \"rxLGCHftnx8oV6o7rUEIjEPfBOQ=\", false, function () {\n  return [useCalcToolStore];\n});\n\n_c = CalcTool;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalcTool\");","map":{"version":3,"sources":["/app/Front-end-bootcamp/demo-app/src/components/CalcTool.js"],"names":["useState","useCalcToolStore","CalcTool","result","add","subtract","multiply","divide","clear","numInput","setNumInput","target","value","parseInt"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAE1B,QAAM;AACFC,IAAAA,MADE;AAEFC,IAAAA,GAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,QAJE;AAKFC,IAAAA,MALE;AAMFC,IAAAA;AANE,MAOEP,gBAAgB,EAPxB;AASA,QAAM,CAAEQ,QAAF,EAAYC,WAAZ,IAA2BV,QAAQ,CAAC,CAAD,CAAzC;AAEA,sBACI;AAAA,4BACI;AAAA,6BACaG,MADb;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,8BACI;AAAA,wCAEI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAEM,QAA5B;AACI,UAAA,QAAQ,EACJ,CAAC;AAACE,YAAAA,MAAM,EAAE;AAAEC,cAAAA;AAAF;AAAT,WAAD,KAA0BF,WAAW,CAACG,QAAQ,CAACD,KAAD,EAAQ,EAAR,CAAT;AAF7C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,gCACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AACC,UAAA,OAAO,EAAE,MAAMR,GAAG,CAACK,QAAD,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAQ,UAAA,IAAI,EAAC,QAAb;AACC,UAAA,OAAO,EAAE,MAAMJ,QAAQ,CAACI,QAAD,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAKI;AAAQ,UAAA,IAAI,EAAC,QAAb;AACC,UAAA,OAAO,EAAE,MAAMH,QAAQ,CAACG,QAAD,CADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAOI;AAAQ,UAAA,IAAI,EAAC,QAAb;AACC,UAAA,OAAO,EAAE,MAAMF,MAAM,CAACE,QAAD,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eASI;AAAQ,UAAA,IAAI,EAAC,QAAb;AACC,UAAA,OAAO,EAAE,MAAMD,KAAK,EADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA1CM;;GAAMN,Q;UASDD,gB;;;KATCC,Q","sourcesContent":["import { useState } from 'react';\nimport { useCalcToolStore } from '../hooks/useCalcToolStore';\n\nexport const CalcTool = () => {\n\n    const {\n        result, \n        add,\n        subtract,\n        multiply,\n        divide,\n        clear\n        } = useCalcToolStore();\n\n    const [ numInput, setNumInput] = useState(0);\n\n    return(\n        <div>\n            <section>\n                Result: {result}\n            </section>\n            <form>\n                <label>\n                    Num:\n                    <input type=\"number\" value={numInput}\n                        onChange={\n                            ({target: { value } }) => setNumInput(parseInt(value, 10))\n                    }\n                    />\n                </label>\n                <fieldset>\n                    <button type=\"button\"\n                     onClick={() => add(numInput)}>+</button>\n                    <button type=\"button\"\n                     onClick={() => subtract(numInput)}>-</button>\n                    <button type=\"button\"\n                     onClick={() => multiply(numInput)}>*</button>\n                    <button type=\"button\"\n                     onClick={() => divide(numInput)}>/</button>\n                    <button type=\"button\"\n                     onClick={() => clear()}>Clear</button>\n                </fieldset>\n            </form>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}