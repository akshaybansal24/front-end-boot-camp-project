{"ast":null,"code":"import { ADD_ACTION, SUBTRACT_ACTION, MULTIPLY_ACTION, DIVIDE_ACTION } from '../actions/calcToolActions';\nexport const calcToolStoreReducer = state => {\n  var result = 0;\n  state.history.forEach(h => {\n    switch (h.type) {\n      case ADD_ACTION:\n        result = result + h.value;\n        break;\n\n      case SUBTRACT_ACTION:\n        result = result - h.value;\n        break;\n\n      case MULTIPLY_ACTION:\n        result = result * h.value;\n        break;\n\n      case DIVIDE_ACTION:\n        result = result / h.value;\n        break;\n\n      default:\n        break;\n    }\n  });\n  return result;\n};\nexport const operationCountReducer = state => {\n  var addCount,\n      subCount,\n      mulCount,\n      divideCount = 0;\n  state.history.forEach(h => {\n    switch (h.type) {\n      case ADD_ACTION:\n        addCount++;\n        break;\n\n      case SUBTRACT_ACTION:\n        subCount++;\n        break;\n\n      case MULTIPLY_ACTION:\n        mulCount++;\n        break;\n\n      case DIVIDE_ACTION:\n        divideCount++;\n        break;\n\n      default:\n        break;\n    }\n  });\n  return {\n    addCount: addCount,\n    subCount: subCount,\n    mulCount: mulCount,\n    divideCount: divideCount\n  };\n};","map":{"version":3,"sources":["/app/Front-end-bootcamp/demo-app/src/reducers/calcToolReducer.js"],"names":["ADD_ACTION","SUBTRACT_ACTION","MULTIPLY_ACTION","DIVIDE_ACTION","calcToolStoreReducer","state","result","history","forEach","h","type","value","operationCountReducer","addCount","subCount","mulCount","divideCount"],"mappings":"AAAA,SAASA,UAAT,EACIC,eADJ,EAEIC,eAFJ,EAGIC,aAHJ,QAIO,4BAJP;AAMA,OAAO,MAAMC,oBAAoB,GAAGC,KAAK,IAAI;AACzC,MAAIC,MAAM,GAAG,CAAb;AACAD,EAAAA,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBC,CAAC,IAAI;AACvB,YAAOA,CAAC,CAACC,IAAT;AACI,WAAKV,UAAL;AACIM,QAAAA,MAAM,GAAGA,MAAM,GAAGG,CAAC,CAACE,KAApB;AACA;;AACH,WAAKV,eAAL;AACGK,QAAAA,MAAM,GAAGA,MAAM,GAAGG,CAAC,CAACE,KAApB;AACA;;AACH,WAAKT,eAAL;AACGI,QAAAA,MAAM,GAAGA,MAAM,GAAGG,CAAC,CAACE,KAApB;AACA;;AACH,WAAKR,aAAL;AACGG,QAAAA,MAAM,GAAGA,MAAM,GAAGG,CAAC,CAACE,KAApB;AACA;;AACJ;AACI;AAdR;AAgBH,GAjBD;AAkBA,SAAOL,MAAP;AACH,CArBM;AAuBP,OAAO,MAAMM,qBAAqB,GAAGP,KAAK,IAAI;AAC1C,MAAIQ,QAAJ;AAAA,MAAcC,QAAd;AAAA,MAAwBC,QAAxB;AAAA,MAAkCC,WAAW,GAAG,CAAhD;AACAX,EAAAA,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBC,CAAC,IAAI;AACvB,YAAOA,CAAC,CAACC,IAAT;AACI,WAAKV,UAAL;AACIa,QAAAA,QAAQ;AACR;;AACH,WAAKZ,eAAL;AACGa,QAAAA,QAAQ;AACR;;AACH,WAAKZ,eAAL;AACGa,QAAAA,QAAQ;AACR;;AACH,WAAKZ,aAAL;AACGa,QAAAA,WAAW;AACX;;AACJ;AACI;AAdR;AAgBH,GAjBD;AAkBA,SAAO;AACHH,IAAAA,QAAQ,EAAEA,QADP;AAEHC,IAAAA,QAAQ,EAAEA,QAFP;AAGHC,IAAAA,QAAQ,EAAEA,QAHP;AAIHC,IAAAA,WAAW,EAAEA;AAJV,GAAP;AAMH,CA1BM","sourcesContent":["import { ADD_ACTION, \n    SUBTRACT_ACTION,\n    MULTIPLY_ACTION, \n    DIVIDE_ACTION\n} from '../actions/calcToolActions';\n\nexport const calcToolStoreReducer = state => {\n    var result = 0;\n    state.history.forEach(h => {\n        switch(h.type){\n            case ADD_ACTION:\n                result = result + h.value;\n                break;\n             case SUBTRACT_ACTION:\n                result = result - h.value;\n                break;\n             case MULTIPLY_ACTION:\n                result = result * h.value;\n                break;\n             case DIVIDE_ACTION:\n                result = result / h.value;\n                break;\n            default:\n                break;\n        }\n    });\n    return result;\n};\n\nexport const operationCountReducer = state => {\n    var addCount, subCount, mulCount, divideCount = 0;\n    state.history.forEach(h => {\n        switch(h.type){\n            case ADD_ACTION:\n                addCount++;\n                break;\n             case SUBTRACT_ACTION:\n                subCount++;\n                break;\n             case MULTIPLY_ACTION:\n                mulCount++;\n                break;\n             case DIVIDE_ACTION:\n                divideCount++;\n                break;\n            default:\n                break;\n        }\n    });\n    return {\n        addCount: addCount,\n        subCount: subCount,\n        mulCount: mulCount,\n        divideCount: divideCount\n    };\n};"]},"metadata":{},"sourceType":"module"}