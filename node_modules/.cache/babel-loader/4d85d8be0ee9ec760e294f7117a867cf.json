{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { ADD_CAR, DELETE_CAR, EDIT_CAR, SORT_CAR, SAVE_CAR, SORT_ASC, SORT_DESC, REFRESH_CARS_DONE_ACTION } from '../actions/carToolActions';\nconst carList = [{\n  id: 1,\n  make: 'Lexus',\n  model: 'NX 300',\n  year: 2021,\n  color: 'Atomic Silver',\n  price: 53000,\n  isEditable: false\n}, {\n  id: 2,\n  make: 'Tesla',\n  model: 'Model 3',\n  year: 2021,\n  color: 'Red',\n  price: 72000,\n  isEditable: false\n}];\n\nconst carReducer = (cars = carList, action) => {\n  switch (action.type) {\n    case DELETE_CAR:\n      console.log(action);\n      return cars.filter(car => car.id !== action.payload.carID);\n\n    case SAVE_CAR:\n      const carsCopy = [...cars];\n      const updatedItemIndex = carsCopy.findIndex(car => car.id === action.payload.car.id);\n      carsCopy[updatedItemIndex] = action.payload.car;\n      return carsCopy;\n\n    case REFRESH_CARS_DONE_ACTION:\n      return action.payload.cars;\n\n    default:\n      return cars;\n  }\n};\n\nconst editCarIdReducer = (editCarId = -1, action) => {\n  switch (action.type) {\n    case ADD_CAR:\n      return -1;\n\n    case DELETE_CAR:\n      return -1;\n\n    case EDIT_CAR:\n      console.log(action.payload.car);\n      editCarId = action.payload.car;\n      return editCarId;\n\n    case SAVE_CAR:\n      return -1;\n\n    default:\n      return -1;\n  }\n};\n\nconst carsSortReducer = (carsSort = {\n  sortCol: 'id',\n  sortDir: SORT_ASC\n}, action) => {\n  if (action.type === SORT_CAR) {\n    if (action.payload.col === carsSort.sortCol) {\n      if (carsSort.sortDir === SORT_ASC) return { ...carsSort,\n        sortDir: SORT_DESC\n      };else return { ...carsSort,\n        sortDir: SORT_ASC\n      };\n    } else {\n      return { ...carsSort,\n        sortCol: action.payload.col,\n        sortDir: SORT_ASC\n      };\n    }\n  }\n\n  return carsSort;\n};\n\nconst isLoadingReducer = (isLoading = false, action) => {\n  if (action.type.includes(\"REQUEST\")) return true;\n  if (action.type.includes(\"DONE\")) return false;\n  return isLoading;\n};\n\nexport const carToolReducer = combineReducers({\n  cars: carReducer,\n  editCarId: editCarIdReducer,\n  carsSort: carsSortReducer,\n  isLoading: isLoadingReducer\n});","map":{"version":3,"sources":["/app/Front-end-bootcamp/demo-app/src/reducers/carToolReducer.js"],"names":["combineReducers","ADD_CAR","DELETE_CAR","EDIT_CAR","SORT_CAR","SAVE_CAR","SORT_ASC","SORT_DESC","REFRESH_CARS_DONE_ACTION","carList","id","make","model","year","color","price","isEditable","carReducer","cars","action","type","console","log","filter","car","payload","carID","carsCopy","updatedItemIndex","findIndex","editCarIdReducer","editCarId","carsSortReducer","carsSort","sortCol","sortDir","col","isLoadingReducer","isLoading","includes","carToolReducer"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\";\n\nimport {\n    ADD_CAR,\n    DELETE_CAR,\n    EDIT_CAR,\n    SORT_CAR,\n    SAVE_CAR,\n    SORT_ASC,\n    SORT_DESC,\n    REFRESH_CARS_DONE_ACTION\n} from '../actions/carToolActions';\n\nconst carList = [\n    {id: 1, make: 'Lexus', model: 'NX 300', year: 2021, color: 'Atomic Silver', price: 53000, isEditable: false},\n    {id: 2, make: 'Tesla', model: 'Model 3', year: 2021, color: 'Red', price: 72000, isEditable: false}\n  ];\n\n\nconst carReducer = (cars = carList, action) => {\n    switch(action.type){\n        case DELETE_CAR:\n            console.log(action)\n            return cars.filter(car => car.id !== action.payload.carID);\n        case SAVE_CAR:\n            const carsCopy = [...cars];\n            const updatedItemIndex = carsCopy.findIndex(car => car.id === action.payload.car.id);\n            carsCopy[updatedItemIndex] = action.payload.car;\n            return carsCopy;\n        case REFRESH_CARS_DONE_ACTION:\n            return action.payload.cars;\n        default:\n            return cars;\n    }\n}\n\nconst editCarIdReducer = (editCarId = -1, action) => {\n    switch(action.type){\n        case ADD_CAR:\n            return -1;\n        case DELETE_CAR:\n            return -1;\n        case EDIT_CAR:\n            console.log(action.payload.car);\n            editCarId = action.payload.car;\n            return editCarId;\n        case SAVE_CAR:\n            return -1;\n        default:\n            return -1;\n        \n    }\n}\n\nconst carsSortReducer = ( carsSort = {sortCol: 'id', sortDir: SORT_ASC}, action) => {\n    if(action.type === SORT_CAR){\n        if(action.payload.col === carsSort.sortCol){\n            if(carsSort.sortDir === SORT_ASC)\n                return {...carsSort, sortDir: SORT_DESC};\n            else\n                return {...carsSort, sortDir: SORT_ASC};\n        }\n        else{\n            return {...carsSort, sortCol: action.payload.col, sortDir: SORT_ASC};\n        }\n    }\n    return carsSort;\n};\n\nconst isLoadingReducer = (isLoading=false, action) => {\n    if(action.type.includes(\"REQUEST\"))\n        return true;\n    if(action.type.includes(\"DONE\"))\n        return false;\n    return isLoading;\n}\n\nexport const carToolReducer = combineReducers({\n    cars: carReducer,\n    editCarId: editCarIdReducer,\n    carsSort: carsSortReducer,\n    isLoading: isLoadingReducer\n})"]},"metadata":{},"sourceType":"module"}