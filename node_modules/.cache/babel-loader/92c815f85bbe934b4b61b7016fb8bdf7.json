{"ast":null,"code":"var _jsxFileName = \"/app/Front-end-bootcamp/demo-app/src/components/CarTool.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { ToolHeader } from \"./ToolHeader.js\";\nimport { CarTable } from \"./CarTable.js\";\nimport { CarForm } from \"./CarForm\";\nimport { ToolFooter } from './ToolFooter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CarTool = props => {\n  _s();\n\n  const [cars, setCars] = useState([...props.cars]);\n\n  const addCar = newCar => {\n    setCars([...cars, { ...newCar,\n      id: Math.max(...cars.map(car => car.id), 0) + 1\n    }]);\n  };\n\n  const editCar = editCarId => {\n    cars.forEach(car => car.id === editCarId ? car.isEditable = true : car.isEditable = false);\n    setCars([...cars]);\n  };\n\n  const deleteCar = removedCarID => {\n    setCars(cars.filter(car => car.id !== removedCarID));\n  };\n\n  const cancelSaveCar = editCarId => {\n    cars.forEach(car => car.isEditable = false);\n    setCars([...cars]);\n  };\n\n  const saveCar = updatedCar => {\n    cars.forEach(car => {\n      if (car.id === updatedCar.id) {\n        console.log(\"Updating car\");\n        car = { ...updatedCar\n        };\n        console.log(updatedCar);\n      }\n\n      car.isEditable = false;\n    });\n    setCars([...cars]);\n  };\n\n  console.log(cars);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToolHeader, {\n      headerText: \"Car Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CarTable, {\n      cars: cars,\n      onDeleteCar: deleteCar,\n      onEditCar: editCar,\n      onClickCancel: cancelSaveCar,\n      onClickSave: saveCar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CarForm, {\n      buttonText: \"Add Car\",\n      onSubmitCar: addCar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToolFooter, {\n      footerText: \"The above section displays car details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CarTool, \"w7n0DtSnzrDmxUFMjuxX7AfR4Bw=\");\n\n_c = CarTool;\nCarTool.defaultProps = {\n  cars: []\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CarTool\");","map":{"version":3,"sources":["/app/Front-end-bootcamp/demo-app/src/components/CarTool.js"],"names":["useState","ToolHeader","CarTable","CarForm","ToolFooter","CarTool","props","cars","setCars","addCar","newCar","id","Math","max","map","car","editCar","editCarId","forEach","isEditable","deleteCar","removedCarID","filter","cancelSaveCar","saveCar","updatedCar","console","log","defaultProps"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,OAAO,MAAMC,OAAO,GAAGC,KAAK,IAAG;AAAA;;AAE3B,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBR,QAAQ,CAAC,CAAC,GAAGM,KAAK,CAACC,IAAV,CAAD,CAAlC;;AAEA,QAAME,MAAM,GAAIC,MAAD,IAAW;AACtBF,IAAAA,OAAO,CAAC,CACJ,GAAGD,IADC,EAEJ,EACI,GAAGG,MADP;AAEIC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,CAAS,GAAGN,IAAI,CAACO,GAAL,CAASC,GAAG,IAAIA,GAAG,CAACJ,EAApB,CAAZ,EAAsC,CAAtC,IAA2C;AAFnD,KAFI,CAAD,CAAP;AAOH,GARD;;AAUA,QAAMK,OAAO,GAAIC,SAAD,IAAe;AAC3BV,IAAAA,IAAI,CAACW,OAAL,CAAaH,GAAG,IAAIA,GAAG,CAACJ,EAAJ,KAAWM,SAAX,GAAuBF,GAAG,CAACI,UAAJ,GAAe,IAAtC,GAA6CJ,GAAG,CAACI,UAAJ,GAAe,KAAhF;AACAX,IAAAA,OAAO,CAAC,CACJ,GAAGD,IADC,CAAD,CAAP;AAGH,GALD;;AAOA,QAAMa,SAAS,GAAIC,YAAD,IAAkB;AAChCb,IAAAA,OAAO,CACHD,IAAI,CAACe,MAAL,CAAYP,GAAG,IAAIA,GAAG,CAACJ,EAAJ,KAAWU,YAA9B,CADG,CAAP;AAGH,GAJD;;AAMA,QAAME,aAAa,GAAIN,SAAD,IAAe;AACjCV,IAAAA,IAAI,CAACW,OAAL,CAAaH,GAAG,IAAIA,GAAG,CAACI,UAAJ,GAAe,KAAnC;AACAX,IAAAA,OAAO,CAAC,CACJ,GAAGD,IADC,CAAD,CAAP;AAGH,GALD;;AAOA,QAAMiB,OAAO,GAAIC,UAAD,IAAgB;AAC5BlB,IAAAA,IAAI,CAACW,OAAL,CAAaH,GAAG,IAAI;AAChB,UAAGA,GAAG,CAACJ,EAAJ,KAAWc,UAAU,CAACd,EAAzB,EAA4B;AACxBe,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAZ,QAAAA,GAAG,GAAG,EAAC,GAAGU;AAAJ,SAAN;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH;;AACDV,MAAAA,GAAG,CAACI,UAAJ,GAAe,KAAf;AAAqB,KANzB;AAOAX,IAAAA,OAAO,CAAC,CACJ,GAAGD,IADC,CAAD,CAAP;AAGH,GAXD;;AAaAmB,EAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AAEA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,UAAU,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,WAAW,EAAEa,SAAnC;AAA8C,MAAA,SAAS,EAAEJ,OAAzD;AAAkE,MAAA,aAAa,EAAEO,aAAjF;AAAgG,MAAA,WAAW,EAAEC;AAA7G;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,OAAD;AAAS,MAAA,UAAU,EAAC,SAApB;AAA8B,MAAA,WAAW,EAAEf;AAA3C;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,UAAD;AAAY,MAAA,UAAU,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AASH,CA1DM;;GAAMJ,O;;KAAAA,O;AA4DbA,OAAO,CAACuB,YAAR,GAAuB;AACnBrB,EAAAA,IAAI,EAAE;AADa,CAAvB","sourcesContent":["import { useState } from \"react\";\nimport { ToolHeader } from \"./ToolHeader.js\";\nimport { CarTable } from \"./CarTable.js\";\nimport { CarForm } from \"./CarForm\";\nimport { ToolFooter } from './ToolFooter';\n\nexport const CarTool = props =>{\n\n    const [ cars, setCars ] = useState([...props.cars]);\n    \n    const addCar = (newCar) =>{\n        setCars([\n            ...cars,\n            {\n                ...newCar,\n                id: Math.max(...cars.map(car => car.id) , 0) + 1,\n            }\n        ]);\n    };\n    \n    const editCar = (editCarId) => {\n        cars.forEach(car => car.id === editCarId ? car.isEditable=true : car.isEditable=false);\n        setCars([\n            ...cars\n        ]);\n    }\n\n    const deleteCar = (removedCarID) => {\n        setCars(\n            cars.filter(car => car.id !== removedCarID)\n        );\n    }\n\n    const cancelSaveCar = (editCarId) => {\n        cars.forEach(car => car.isEditable=false);\n        setCars([\n            ...cars\n        ]);\n    }\n\n    const saveCar = (updatedCar) => {\n        cars.forEach(car => {\n            if(car.id === updatedCar.id){\n                console.log(\"Updating car\");\n                car = {...updatedCar};\n                console.log(updatedCar);\n            }\n            car.isEditable=false});\n        setCars([\n            ...cars\n        ]);\n    }\n\n    console.log(cars);\n\n    return(\n        <>\n            <ToolHeader headerText=\"Car Tool\" />\n            <CarTable cars={cars} onDeleteCar={deleteCar} onEditCar={editCar} onClickCancel={cancelSaveCar} onClickSave={saveCar} />\n            <br></br>\n            <CarForm buttonText=\"Add Car\" onSubmitCar={addCar}></CarForm>\n            <ToolFooter footerText=\"The above section displays car details\"></ToolFooter>\n        </>\n    )\n};\n\nCarTool.defaultProps = {\n    cars: [],\n}"]},"metadata":{},"sourceType":"module"}