{"ast":null,"code":"// import { useSortedList, SORT_ASC, SORT_DESC } from '../hooks/useSortedList';\n// import { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { createAddCarAction, createDeleteCarAction, createEditCarAction, createSortCarAction } from '../actions/carToolActions'; // export const useCarToolStore = initialCars => {\n//     const [ editCarId, setEditCarId ] = useState(-1);\n//     const [ \n//         cars, addCarToList, deleteCarFromList, saveCarToList,\n//         sortCol, setSortCol,\n//         sortDir, setSortDir\n//     ] = useSortedList(initialCars, 'id', SORT_ASC);\n//     const addCar = (newCar) =>{\n//         addCarToList(newCar);\n//         setEditCarId(-1);\n//     };\n//     const deleteCar = (removedCarID) => {\n//         deleteCarFromList(removedCarID);\n//         setEditCarId(-1);\n//     }\n//     const saveCar = (updatedCar) => {\n//         saveCarToList(updatedCar);\n//         setEditCarId(-1);\n//     }\n//     const updateSort = (newSortColName) => {\n//         if(sortCol === newSortColName){\n//             if(sortDir === SORT_ASC)\n//                 setSortDir(SORT_DESC);\n//             else\n//                 setSortDir(SORT_ASC);\n//         }else{\n//             setSortDir(SORT_ASC);\n//         }\n//         setSortCol(newSortColName);\n//     }\n//     return {\n//         cars, \n//         addCar, \n//         deleteCar, \n//         saveCar, \n//         updateSort, \n//         sortCol,\n//         sortDir,\n//         editCarId,\n//         setEditCarId\n//     }\n// }\n\nexport const useCarToolStore = () => {};","map":{"version":3,"sources":["/app/Front-end-bootcamp/demo-app/src/hooks/useCarToolStore.js"],"names":["useDispatch","useSelector","bindActionCreators","createAddCarAction","createDeleteCarAction","createEditCarAction","createSortCarAction","useCarToolStore"],"mappings":"AAAA;AACA;AAEA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SACIC,kBADJ,EAEIC,qBAFJ,EAGIC,mBAHJ,EAIIC,mBAJJ,QAKO,2BALP,C,CAOA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM,CAEpC,CAFM","sourcesContent":["// import { useSortedList, SORT_ASC, SORT_DESC } from '../hooks/useSortedList';\n// import { useState } from \"react\";\n\nimport  {useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n    createAddCarAction,\n    createDeleteCarAction,\n    createEditCarAction,\n    createSortCarAction\n} from '../actions/carToolActions';\n\n// export const useCarToolStore = initialCars => {\n\n//     const [ editCarId, setEditCarId ] = useState(-1);\n\n//     const [ \n//         cars, addCarToList, deleteCarFromList, saveCarToList,\n//         sortCol, setSortCol,\n//         sortDir, setSortDir\n//     ] = useSortedList(initialCars, 'id', SORT_ASC);\n    \n//     const addCar = (newCar) =>{\n//         addCarToList(newCar);\n//         setEditCarId(-1);\n//     };\n\n//     const deleteCar = (removedCarID) => {\n//         deleteCarFromList(removedCarID);\n//         setEditCarId(-1);\n//     }\n\n//     const saveCar = (updatedCar) => {\n//         saveCarToList(updatedCar);\n//         setEditCarId(-1);\n//     }\n\n//     const updateSort = (newSortColName) => {\n//         if(sortCol === newSortColName){\n//             if(sortDir === SORT_ASC)\n//                 setSortDir(SORT_DESC);\n//             else\n//                 setSortDir(SORT_ASC);\n//         }else{\n//             setSortDir(SORT_ASC);\n//         }\n//         setSortCol(newSortColName);\n//     }\n\n//     return {\n//         cars, \n//         addCar, \n//         deleteCar, \n//         saveCar, \n//         updateSort, \n//         sortCol,\n//         sortDir,\n//         editCarId,\n//         setEditCarId\n//     }\n// }\n\nexport const useCarToolStore = () => {\n\n};"]},"metadata":{},"sourceType":"module"}