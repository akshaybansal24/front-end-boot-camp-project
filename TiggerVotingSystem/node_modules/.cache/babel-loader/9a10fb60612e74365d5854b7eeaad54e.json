{"ast":null,"code":"var _jsxFileName = \"/app/Front-end-bootcamp/demo-app/src/components/CalcTool.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useCalcToolStore } from '../hooks/useCalcToolStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CalcTool = () => {\n  _s();\n\n  const {\n    result,\n    history,\n    errorMessage,\n    add,\n    subtract,\n    multiply,\n    divide,\n    clear,\n    deleteHistory\n  } = useCalcToolStore();\n  const [numInput, setNumInput] = useState(0);\n\n  const doClear = () => {\n    setNumInput(0);\n    clear();\n  };\n\n  const isEmpty = arr => !Array.isArray(arr) || arr.length === 0;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [\"Result: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Num:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: numInput,\n          onChange: ({\n            target: {\n              value\n            }\n          }) => setNumInput(value !== '' ? parseInt(value, 10) : '')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => add(numInput),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => subtract(numInput),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => multiply(numInput),\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => divide(numInput),\n          children: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => doClear(),\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: isEmpty(history) ? /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No History\"\n        }, '-1', false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 23\n        }, this) : history.map(h => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [h.type, \"\\u2003\", h.value, \"\\u2003\", /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => deleteHistory(h.id),\n              children: \"Delete Histoty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, this)]\n          }, h.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CalcTool, \"WuP5zcJuKyuLKGoPSNm8+Uk/CGo=\", false, function () {\n  return [useCalcToolStore];\n});\n\n_c = CalcTool;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalcTool\");","map":{"version":3,"sources":["/app/Front-end-bootcamp/demo-app/src/components/CalcTool.js"],"names":["useState","useCalcToolStore","CalcTool","result","history","errorMessage","add","subtract","multiply","divide","clear","deleteHistory","numInput","setNumInput","doClear","isEmpty","arr","Array","isArray","length","target","value","parseInt","map","h","type","id"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { useCalcToolStore } from '../hooks/useCalcToolStore';\n\nexport const CalcTool = () => {\n\n    const {\n        result, \n        history,\n        errorMessage,\n        add,\n        subtract,\n        multiply,\n        divide,\n        clear,\n        deleteHistory\n        } = useCalcToolStore();\n\n    const [ numInput, setNumInput] = useState(0);\n\n    const doClear =() => {\n        setNumInput(0);\n        clear();\n    }\n\n    const isEmpty = arr => !Array.isArray(arr) || arr.length === 0;\n\n    return(\n        <div>\n            <section>\n                Result: {result}\n            </section>\n            <form>\n                <label>\n                    Num:\n                    <input type=\"number\" value={numInput}\n                        onChange={\n                            ({target: { value } }) => setNumInput(value!=='' ? parseInt(value, 10) : '')\n                    }\n                    />\n                    {errorMessage}\n                </label>\n                <fieldset>\n                    <button type=\"button\"\n                     onClick={() => add(numInput)}>+</button>\n                    <button type=\"button\"\n                     onClick={() => subtract(numInput)}>-</button>\n                    <button type=\"button\"\n                     onClick={() => multiply(numInput)}>*</button>\n                    <button type=\"button\"\n                     onClick={() => divide(numInput)}>/</button>\n                    <button type=\"button\"\n                     onClick={() => doClear()}>Clear</button>\n                </fieldset>\n                <ul>\n                    { isEmpty(history)\n                    ? <li key='-1'>No History</li> : \n                    history.map(h => {\n                            return(\n                                <li key={h.id}>{h.type}&emsp;{h.value}&emsp;\n                                    <button type=\"button\"\n                                        onClick={ () => deleteHistory(h.id) }\n                                    >Delete Histoty</button>\n                                </li>\n                            );\n                        }\n                    \n                    )}\n                </ul>\n            </form>\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}