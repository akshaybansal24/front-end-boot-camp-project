{"ast":null,"code":"import { ADD_ACTION, SUBTRACT_ACTION, MULTIPLY_ACTION, DIVIDE_ACTION, CLEAR_ACTION } from '../actions/calcToolActions';\nexport const calcToolReducer = (state = {\n  result: 0,\n  history: []\n}, action) => {\n  switch (action.type) {\n    case ADD_ACTION:\n      const historyCopyAdd = [...state.history];\n      historyCopyAdd.push({\n        id: 1,\n        value: action.payload.value,\n        type: '+'\n      });\n      return { ...state,\n        result: state.result + action.payload.value,\n        history: historyCopyAdd\n      };\n\n    case SUBTRACT_ACTION:\n      const historyCopySubtract = [...state.history];\n      historyCopySubtract.push({\n        id: 1,\n        value: action.payload.value,\n        type: '-'\n      });\n      return { ...state,\n        result: state.result - action.payload.value,\n        history: historyCopySubtract\n      };\n\n    case MULTIPLY_ACTION:\n      const historyCopyMultiply = [...state.history.p];\n      historyCopyMultiply.push({\n        id: 1,\n        value: action.payload.value,\n        type: '-'\n      });\n      return { ...state,\n        result: state.result * action.payload.value,\n        history: historyCopyMultiply\n      };\n\n    case DIVIDE_ACTION:\n      const historyCopyDivide = [...state.history.p];\n      historyCopyDivide.push({\n        id: 1,\n        value: action.payload.value,\n        type: '-'\n      });\n      return { ...state,\n        result: state.result / action.payload.value,\n        history: historyCopyDivide\n      };\n\n    case CLEAR_ACTION:\n      return { ...state,\n        history: [],\n        result: 0\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/app/Front-end-bootcamp/demo-app/src/reducers/calToolReducers.js"],"names":["ADD_ACTION","SUBTRACT_ACTION","MULTIPLY_ACTION","DIVIDE_ACTION","CLEAR_ACTION","calcToolReducer","state","result","history","action","type","historyCopyAdd","push","id","value","payload","historyCopySubtract","historyCopyMultiply","p","historyCopyDivide"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,eAArB,EAAsCC,eAAtC,EAAuDC,aAAvD,EAAsEC,YAAtE,QAAyF,4BAAzF;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,MAAM,EAAC,CAAR;AAAWC,EAAAA,OAAO,EAAE;AAApB,CAAT,EAAkCC,MAAlC,KAA6C;AAExE,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,UAAL;AACI,YAAMW,cAAc,GAAG,CAAC,GAAGL,KAAK,CAACE,OAAV,CAAvB;AACAG,MAAAA,cAAc,CAACC,IAAf,CAAoB;AAChBC,QAAAA,EAAE,EAAE,CADY;AAEhBC,QAAAA,KAAK,EAAEL,MAAM,CAACM,OAAP,CAAeD,KAFN;AAGhBJ,QAAAA,IAAI,EAAE;AAHU,OAApB;AAKA,aAAO,EACH,GAAGJ,KADA;AAEHC,QAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,GAAeE,MAAM,CAACM,OAAP,CAAeD,KAFnC;AAGHN,QAAAA,OAAO,EAAEG;AAHN,OAAP;;AAKJ,SAAKV,eAAL;AACI,YAAMe,mBAAmB,GAAG,CAAC,GAAGV,KAAK,CAACE,OAAV,CAA5B;AACAQ,MAAAA,mBAAmB,CAACJ,IAApB,CAAyB;AACrBC,QAAAA,EAAE,EAAE,CADiB;AAErBC,QAAAA,KAAK,EAAEL,MAAM,CAACM,OAAP,CAAeD,KAFD;AAGrBJ,QAAAA,IAAI,EAAE;AAHe,OAAzB;AAKA,aAAO,EACH,GAAGJ,KADA;AAEHC,QAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,GAAeE,MAAM,CAACM,OAAP,CAAeD,KAFnC;AAGHN,QAAAA,OAAO,EAAEQ;AAHN,OAAP;;AAKJ,SAAKd,eAAL;AACI,YAAMe,mBAAmB,GAAG,CAAC,GAAGX,KAAK,CAACE,OAAN,CAAcU,CAAlB,CAA5B;AACAD,MAAAA,mBAAmB,CAACL,IAApB,CAAyB;AACrBC,QAAAA,EAAE,EAAE,CADiB;AAErBC,QAAAA,KAAK,EAAEL,MAAM,CAACM,OAAP,CAAeD,KAFD;AAGrBJ,QAAAA,IAAI,EAAE;AAHe,OAAzB;AAKA,aAAO,EACH,GAAGJ,KADA;AAEHC,QAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,GAAeE,MAAM,CAACM,OAAP,CAAeD,KAFnC;AAGHN,QAAAA,OAAO,EAAES;AAHN,OAAP;;AAKJ,SAAKd,aAAL;AACI,YAAMgB,iBAAiB,GAAG,CAAC,GAAGb,KAAK,CAACE,OAAN,CAAcU,CAAlB,CAA1B;AACAC,MAAAA,iBAAiB,CAACP,IAAlB,CAAuB;AACnBC,QAAAA,EAAE,EAAE,CADe;AAEnBC,QAAAA,KAAK,EAAEL,MAAM,CAACM,OAAP,CAAeD,KAFH;AAGnBJ,QAAAA,IAAI,EAAE;AAHa,OAAvB;AAKA,aAAO,EACH,GAAGJ,KADA;AAEHC,QAAAA,MAAM,EAAED,KAAK,CAACC,MAAN,GAAeE,MAAM,CAACM,OAAP,CAAeD,KAFnC;AAGHN,QAAAA,OAAO,EAAEW;AAHN,OAAP;;AAKJ,SAAKf,YAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHE,QAAAA,OAAO,EAAE,EAFN;AAGHD,QAAAA,MAAM,EAAE;AAHL,OAAP;;AAKJ;AACI,aAAOD,KAAP;AAxDR;AA0DH,CA5DM","sourcesContent":["import { ADD_ACTION, SUBTRACT_ACTION, MULTIPLY_ACTION, DIVIDE_ACTION, CLEAR_ACTION} from '../actions/calcToolActions';\n\nexport const calcToolReducer = (state = {result:0, history: []}, action) => {\n    \n    switch(action.type){\n        case ADD_ACTION:\n            const historyCopyAdd = [...state.history];\n            historyCopyAdd.push({\n                id: 1,\n                value: action.payload.value,\n                type: '+'\n            });\n            return {\n                ...state,\n                result: state.result + action.payload.value,\n                history: historyCopyAdd\n            };\n        case SUBTRACT_ACTION:\n            const historyCopySubtract = [...state.history];\n            historyCopySubtract.push({\n                id: 1,\n                value: action.payload.value,\n                type: '-'\n            });\n            return {\n                ...state,\n                result: state.result - action.payload.value,\n                history: historyCopySubtract\n            };\n        case MULTIPLY_ACTION:\n            const historyCopyMultiply = [...state.history.p];\n            historyCopyMultiply.push({\n                id: 1,\n                value: action.payload.value,\n                type: '-'\n            });\n            return {\n                ...state,\n                result: state.result * action.payload.value,\n                history: historyCopyMultiply\n            };\n        case DIVIDE_ACTION:\n            const historyCopyDivide = [...state.history.p];\n            historyCopyDivide.push({\n                id: 1,\n                value: action.payload.value,\n                type: '-'\n            });\n            return {\n                ...state,\n                result: state.result / action.payload.value,\n                history: historyCopyDivide\n            };\n        case CLEAR_ACTION:\n            return {\n                ...state,\n                history: [],\n                result: 0,\n            };\n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}