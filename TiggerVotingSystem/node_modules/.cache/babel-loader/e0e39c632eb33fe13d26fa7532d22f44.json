{"ast":null,"code":"var _jsxFileName = \"/app/Front-end-bootcamp/demo-app/src/components/ColorTool.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { ToolHeader } from './ToolHeader.js';\nimport { ColorList } from './ColorList.js';\nimport { ColorForm } from './ColorForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ColorTool = props => {\n  _s();\n\n  const [colors, setColors] = useState([...props.colors]);\n\n  const addColor = newColor => {\n    setColors([...colors, { ...newColor,\n      id: Math.max(...colors.map(c => c.id), 0) + 1\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToolHeader, {\n      headerText: \"Color Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ColorList, {\n      colors: colors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ColorForm, {\n      buttonText: \"Add Color\",\n      onSubmitColor: addColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ColorTool, \"fVuzC3Yg9x2O0ldBIg6jNl8VELc=\");\n\n_c = ColorTool;\nColorTool.defaultProps = {\n  colors: []\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorTool\");","map":{"version":3,"sources":["/app/Front-end-bootcamp/demo-app/src/components/ColorTool.js"],"names":["useState","ToolHeader","ColorList","ColorForm","ColorTool","props","colors","setColors","addColor","newColor","id","Math","max","map","c","defaultProps"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;;;AAEA,OAAO,MAAMC,SAAS,GAAGC,KAAK,IAAG;AAAA;;AAE7B,QAAM,CAAEC,MAAF,EAAUC,SAAV,IAAwBP,QAAQ,CAAC,CAAC,GAAGK,KAAK,CAACC,MAAV,CAAD,CAAtC;;AAEA,QAAME,QAAQ,GAAIC,QAAD,IAAc;AAC3BF,IAAAA,SAAS,CAAC,CACN,GAAGD,MADG,EAEN,EACI,GAAGG,QADP;AAEIC,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,CAAS,GAAGN,MAAM,CAACO,GAAP,CAAWC,CAAC,IAAIA,CAAC,CAACJ,EAAlB,CAAZ,EAAoC,CAApC,IAAyC;AAFjD,KAFM,CAAD,CAAT;AAOH,GARD;;AAUA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,UAAU,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI,QAAC,SAAD;AAAW,MAAA,UAAU,EAAC,WAAtB;AAAkC,MAAA,aAAa,EAAEE;AAAjD;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AASH,CAvBM;;GAAMJ,S;;KAAAA,S;AAyBbA,SAAS,CAACW,YAAV,GAAyB;AACrBT,EAAAA,MAAM,EAAE;AADa,CAAzB","sourcesContent":["import { useState } from \"react\";\nimport { ToolHeader } from './ToolHeader.js';\nimport { ColorList } from './ColorList.js';\nimport { ColorForm } from './ColorForm';\n\nexport const ColorTool = props =>{\n    \n    const [ colors, setColors ] = useState([...props.colors]);\n\n    const addColor = (newColor) => {\n        setColors([\n            ...colors,\n            {\n                ...newColor,\n                id: Math.max(...colors.map(c => c.id) , 0) + 1,\n            }\n        ]);\n    };\n\n    return(\n        <>\n            <ToolHeader headerText=\"Color Tool\" />\n            \n            <ColorList colors={colors} />\n\n            <ColorForm buttonText=\"Add Color\" onSubmitColor={addColor}></ColorForm>\n        </>\n    )\n};\n\nColorTool.defaultProps = {\n    colors: [],\n}"]},"metadata":{},"sourceType":"module"}