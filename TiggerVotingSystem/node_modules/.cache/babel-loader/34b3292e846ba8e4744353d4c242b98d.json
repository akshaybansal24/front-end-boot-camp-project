{"ast":null,"code":"import { ADD_ACTION, SUBTRACT_ACTION, MULTIPLY_ACTION, DIVIDE_ACTION } from '../actions/calcToolActions';\nexport const calcToolStoreReducer = state => {\n  return state.history.reduce((result, entry) => {\n    switch (entry.type) {\n      case ADD_ACTION:\n        return result + entry.value;\n\n      case SUBTRACT_ACTION:\n        return result - entry.value;\n\n      case MULTIPLY_ACTION:\n        return result * entry.value;\n\n      case DIVIDE_ACTION:\n        return result / entry.value;\n\n      default:\n        return result;\n    }\n  }, 0);\n};\nexport const operationCountReducer = state => {\n  return state.history.reduce((opCount, entry) => {\n    if (opCount[entry.name]) {\n      opCount[entry.name]++;\n    } else {\n      opCount[entry.name] = 1;\n    }\n  }, {});\n};","map":{"version":3,"sources":["/app/Front-end-bootcamp/demo-app/src/reducers/calcToolReducer.js"],"names":["ADD_ACTION","SUBTRACT_ACTION","MULTIPLY_ACTION","DIVIDE_ACTION","calcToolStoreReducer","state","history","reduce","result","entry","type","value","operationCountReducer","opCount","name"],"mappings":"AAAA,SAASA,UAAT,EACIC,eADJ,EAEIC,eAFJ,EAGIC,aAHJ,QAIO,4BAJP;AAMA,OAAO,MAAMC,oBAAoB,GAAGC,KAAK,IAAI;AACzC,SAAOA,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAsB,CAACC,MAAD,EAAQC,KAAR,KAAkB;AAC3C,YAAOA,KAAK,CAACC,IAAb;AACI,WAAKV,UAAL;AACI,eAAOQ,MAAM,GAAGC,KAAK,CAACE,KAAtB;;AACH,WAAKV,eAAL;AACG,eAAOO,MAAM,GAAGC,KAAK,CAACE,KAAtB;;AACH,WAAKT,eAAL;AACG,eAAOM,MAAM,GAAGC,KAAK,CAACE,KAAtB;;AACH,WAAKR,aAAL;AACG,eAAOK,MAAM,GAAGC,KAAK,CAACE,KAAtB;;AACJ;AACI,eAAOH,MAAP;AAVR;AAYH,GAbM,EAaJ,CAbI,CAAP;AAcH,CAfM;AAiBP,OAAO,MAAMI,qBAAqB,GAAGP,KAAK,IAAI;AAE1C,SAAOA,KAAK,CAACC,OAAN,CAAcC,MAAd,CAAsB,CAACM,OAAD,EAAUJ,KAAV,KAAoB;AAC7C,QAAGI,OAAO,CAACJ,KAAK,CAACK,IAAP,CAAV,EAAuB;AACnBD,MAAAA,OAAO,CAACJ,KAAK,CAACK,IAAP,CAAP;AACH,KAFD,MAEK;AACDD,MAAAA,OAAO,CAACJ,KAAK,CAACK,IAAP,CAAP,GAAsB,CAAtB;AACH;AACJ,GANM,EAMJ,EANI,CAAP;AAOH,CATM","sourcesContent":["import { ADD_ACTION, \n    SUBTRACT_ACTION,\n    MULTIPLY_ACTION, \n    DIVIDE_ACTION\n} from '../actions/calcToolActions';\n\nexport const calcToolStoreReducer = state => {\n    return state.history.reduce( (result,entry) => {\n        switch(entry.type){\n            case ADD_ACTION:\n                return result + entry.value;\n             case SUBTRACT_ACTION:\n                return result - entry.value;\n             case MULTIPLY_ACTION:\n                return result * entry.value;\n             case DIVIDE_ACTION:\n                return result / entry.value;\n            default:\n                return result;\n        }\n    }, 0);\n};\n\nexport const operationCountReducer = state => {\n    \n    return state.history.reduce( (opCount, entry) => {\n        if(opCount[entry.name]){\n            opCount[entry.name]++;\n        }else{\n            opCount[entry.name] = 1;\n        }\n    }, {});\n};"]},"metadata":{},"sourceType":"module"}